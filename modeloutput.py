# -*- coding: utf-8 -*-
"""modeloutput.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CanG6Gho5edVjnzwbS-EpCk8v5R36vP8
"""

from multiprocessing import Pool
import dill as pickle 
import os

def model_result(model, model_name, word, statement, score_dictionary):
  print("model score called")
  res = model.score(word, statement)
  print(res)
  score_dictionary[word] = res
  temp = int(res * 1000)
  # f = open(str(model_name + str(temp)), "at")
  # f.write(word)
  # f.close()

def model_output(model_name, vocab, statement):
  print(statement)
  with open(str(model_name + ".pkl"), 'rb') as f:
    score_dictionary = {}
    model = pickle.load(f)
    print("model loaded successfully")    
    # pool = Pool(processes=16) #processes=len(correct_words)
    for word in vocab:
      model_result(model, model_name, word, statement, score_dictionary)
      print("Current Word: ",word)
      # pool.apply_async(model_score, args=(model, word, statement))
    # pool.close()
    # pool.join()


    # Referenced from https://www.freecodecamp.org/news/sort-dictionary-by-value-in-python/
    sorted_score_dictionary = sorted(score_dictionary.items(), key=lambda x:x[1], reverse=True)
    print(sorted_score_dictionary)
    final_list = []
    for i in range(15):
      final_list.append(sorted_score_dictionary[i][0])
    print(final_list)

    # return sorted_score_dictionary[:15]
    return final_list